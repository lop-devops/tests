include tests-shared.cfg
username = root
password = 123456
main_vm = avocado-vt-vm1
vms = avocado-vt-vm1
#Network
nettype = bridge
netdst=virbr0
# Using Text mode of installation
display = 'nographic'
take_regular_screendumps = no
keep_screendumps_on_error = no
keep_screendumps = no
store_vm_register = no
virt_install_binary = /usr/bin/virt-install
qemu_img_binary = /usr/bin/qemu-img
qemu_binary = /usr/bin/qemu-system-ppc64
emulator_path = /usr/bin/qemu-system-ppc64
use_os_variant=yes
hvm_or_pv = hvm
machine_type = pseries
only bridge
no xen, lxc, esx, ovmf
#Filterout unwanted disk types
no ide,xenblk,lsi_scsi,ahci,sd
no qed,qcow2v3,raw_dd,vmdk, usb2
no e1000-82540em,e1000-82545em,e1000-82544gc,xennet,nic_custom
only no_virtio_rng
only smp2
only no_9p_export
only no_pci_assignable
only (image_backend=filesystem)
only smallpages
smp = 32
vcpu_cores = 32
vcpu_threads = 1
vcpu_sockets = 1
# 32G
mem = 32768
# number_vfs = 2
number_vfs = "Enter the no.of Virtual Function's to be created for each PF"
# Eg: 0000:05:00.0
pf_filter = "ENTER.YOUR.PCI.LABEL"
libvirt_pci_net_ip = "ENTER.YOUR.IP"
libvirt_pci_server_ip = "ENTER.YOUR.SERVER.IP"
libvirt_pci_net_mask = "ENTER.YOUR.NETMASK"
# Eg: 0000:05:00.0
libvirt_pci_net_dev_name = "ENTER.YOUR.PCI.LABEL"
libvirt_pci_storage_dev_label = "ENTER.YOUR.PCI.LABEL"
# enter timeout value
timeout = "ENTER.YOUR.TIMEOUT"
# model is dependent on architecture
# for power architecture it is pci-root
# index should be other than default VPHB i.e 0
model = "ENTER.YOUR.DEVICE.MODEL"
# enter value for how many times hotplug/unplug will happen
# except stress test remaining all tests it will be 1
stress_val = "1"
# Please enter the PCI device label for
# a network device. We will attach this
# device to guest. Then this network device
# will be unavailable on host.
# E.g: 0000:05:00.0
libvirt_pci_net_dev_label = "ENTER.YOUR.PCI.LABEL"
# enter the ioa system bus info
# this value wil be based on the system bus info
# if your system is 32-bit then use ioa-bus-error
# if your system is 64-bit then use ioa-bus-error-64
ioa_system_info = "ioa-bus-error"
# enter the functioninjection values your system supports 4 or 6 
func = "6"
# enter the number of eeh hits you want to trigger
# after this the device will be permanently disabled
max_freeze = "5"

variants:
    - guest_import:
        only unattended_install.import.import.default_install.aio_native

    - device_passthrough:
        only libvirt_pci_passthrough
        # removing below tests now as they are already covered in the above test.
        # No need to explictly add them again.
        # only NIC
        # only SRIOV

    - hotplug_hotunplug_passthrough:
        only libvirt_pci_passthrough_hotplug

    - pci_passthrough_eeh:       
        only libvirt_pci_passthrough_eeh

    - guest_remove:
        only remove_guest.without_disk
