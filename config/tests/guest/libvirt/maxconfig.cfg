include tests-shared.cfg
username = root
password = 123456
main_vm = virt-tests-vm1
vms = virt-tests-vm1
nettype = bridge
netdst=virbr0
# Using Text mode of installation
display = 'nographic'
take_regular_screendumps = no
keep_screendumps_on_error = no
keep_screendumps = no
store_vm_register = no
virt_install_binary = /usr/bin/virt-install
qemu_img_binary = /usr/bin/qemu-img
qemu_binary = /usr/bin/qemu-system-ppc64
emulator_path = /usr/bin/qemu-system-ppc64
use_os_variant=yes
hvm_or_pv = hvm
machine_type = pseries
only bridge
no xen, lxc, esx, ovmf
# Filterout unwanted disk types
no ide,xenblk,lsi_scsi,ahci,sd
no qed,qcow2v3,raw_dd,vmdk, usb2
no e1000-82540em,e1000-82545em,e1000-82544gc,xennet,nic_custom
only no_virtio_rng
only smp2
only no_9p_export
only no_pci_assignable
only (image_backend=filesystem)
only smallpages
smp = 32
vcpu_cores = 32
vcpu_threads = 1
vcpu_sockets = 1
# 32G
mem = 32768
setvcpus_max = 32
only virtio_net
only virtio_scsi
only qcow2
variants:
    - guest_import:
        only unattended_install.import.import.default_install.aio_native

    - guest_maxconfig:
        # Match maximum possible Host memory in GB
        # below params sets guest memory to 800G
        flexible_nic_index = yes
        usermaxmem = 800
        only limit
        no limit.with_graphics.max_network

    - guest_remove:
        only remove_guest.without_disk

    - guest_scalability:
        main_vm = vm1
        create_vm_libvirt = yes
        kill_vm_libvirt = yes
        env_cleanup = yes
        backup_image_before_testing = no
        restore_image_after_testing = no
        vcpu_maxcpus = 4
        vcpu_threads = 2
        vcpu_cores = 2
        smp = 4
        mem = 10240
        # This is sample config to demonstrate the running tests with multiple VMs
        # below configs can be modified to perform various guest stress, other events
        # like reboot, vcpu pinning etc with multiple vms
        # run below command to show other possible test combinations
        # avocado list -V multivm_cpustress --vt-type libvirt
        guest_stress = no 
        host_stress = no
        stress_events = ""
        # Make sure enough host disk space to create as many number of vms given below
        vms="vm1 vm2 vm3 vm4 vm5 vm6 vm7 vm8 vm9 vm10 vm11 vm12 vm13 vm14 vm15 vm16 vm17 vm18 vm19 vm20 vm21 vm22 vm23 vm24 vm25"
        only multivm_cpustress.custom_host_events.custom_vm_events
